name: Sync and Translate Files

on:
  push:
    paths:
      - 'en/**'  # Trigger on changes in the 'en' directory
  pull_request:
    paths:
      - 'en/**'  # Trigger for PRs on changes in 'en' directory

jobs:
  translate-and-copy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Specify your Node.js version

    - name: Install dependencies
      run: |
        # Install dependencies for your ESM script
        npm install node-fetch

    - name: Copy and Translate Files
      env:
        TARGET_LANGUAGES: "ru zh"  # List the target languages (ru, zh)
      run: |
        # Iterate over each target language
        for lang in $TARGET_LANGUAGES; do
          mkdir -p $lang  # Ensure the directory exists

          # Find all files in the 'en' directory
          for file in $(find en -type f); do
            relative_path=${file#en/}  # Get the relative file path
            target_file="$lang/$relative_path"
            mkdir -p "$(dirname "$target_file")"  # Create necessary subdirectories

            # Translate the content of the file using the ESM script
            node -r esm -e "
              import { readFileSync, writeFileSync } from 'fs';
              import fetch from 'node-fetch';

              async function translateText(text, targetLanguage = '$lang', sourceLanguage = 'en') {
                const apiKey = 'AIzaSyCP5-GJVMKaNQePcHyCVZO9jmqeTrV8Px0';  // Replace with your API key
                const url = 'https://translation.googleapis.com/language/translate/v2?key=' + apiKey;
                const body = JSON.stringify({ q: text, target: targetLanguage, source: sourceLanguage, format: 'text' });

                try {
                  const response = await fetch(url, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: body
                  });
                  const data = await response.json();
                  if (response.ok) {
                    return data.data.translations[0].translatedText;
                  } else {
                    throw new Error(data.error.message);
                  }
                } catch (error) {
                  console.error('Error translating text:', error);
                  return null;
                }
              }

              async function translateMarkdownFile(inputFile, outputFile, targetLanguage) {
                try {
                  const content = readFileSync(inputFile, 'utf8');
                  const translatedContent = await translateText(content, targetLanguage);
                  if (translatedContent) {
                    writeFileSync(outputFile, translatedContent, 'utf8');
                    console.log('Translation complete. The translated file is saved as:', outputFile);
                  }
                } catch (error) {
                  console.error('Error processing the markdown file:', error);
                }
              }

              const inputFile = '$file';
              const outputFile = '$target_file';

              translateMarkdownFile(inputFile, outputFile, '$lang');
            "

            # Copy the translated file into the target directory
            if [ -f "$target_file" ]; then
              cp "$target_file" "$lang/$relative_path"
            fi
          done
        done

    - name: Commit and push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git add -A ru zh
        git diff --cached --quiet || git commit -m "Sync files from 'en' to target language directories"
        git pull origin main --rebase
        git push origin main
